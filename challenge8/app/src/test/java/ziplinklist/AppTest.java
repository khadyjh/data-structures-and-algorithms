/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ziplinklist;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {


    @Test
    @DisplayName("one linked list is Empty")
    void emptyTest(){
        LinkedList<Integer> linkedList=new LinkedList<>();
        linkedList.insert(1);
        linkedList.append(2);
        linkedList.append(3);

        LinkedList<Integer> linkedList1=new LinkedList<>();

        LinkedList<Integer>list=linkedList.zipLists(linkedList,linkedList1);
        String result=list.toString();

        String exp=" {1} ->{2} ->{3} ->NULL";
        assertEquals(exp,result);
    }

    @Test
    @DisplayName("both linked list are Empty")
    void bothEmptyTest(){
        LinkedList<Integer> linkedList=new LinkedList<>();

        LinkedList<Integer> linkedList1=new LinkedList<>();

        LinkedList<Integer>list=linkedList.zipLists(linkedList,linkedList1);
        String result=list.toString();

        String exp=" NULL";
        assertEquals(exp,result);
    }

    @Test
    @DisplayName("both linked list are same in size")
    void sizeEqTest(){
        LinkedList<Integer> linkedList=new LinkedList<>();
        linkedList.insert(1);
        linkedList.append(2);
        linkedList.append(3);

        LinkedList<Integer> linkedList1=new LinkedList<>();
        linkedList1.insert(4);
        linkedList1.append(5);
        linkedList1.append(6);

        LinkedList<Integer>list=linkedList.zipLists(linkedList,linkedList1);
        String result=list.toString();

        String exp=" {1} ->{4} ->{2} ->{5} ->{3} ->{6} ->NULL";
        assertEquals(exp,result);
    }

    @Test
    @DisplayName("both linked list are deffer-ant in size")
    void sizeDTest(){
        LinkedList<Integer> linkedList=new LinkedList<>();
        linkedList.insert(1);
        linkedList.append(2);
        linkedList.append(3);

        LinkedList<Integer> linkedList1=new LinkedList<>();
        linkedList1.insert(4);
        linkedList1.append(5);
        linkedList1.append(6);
        linkedList1.append(7);

        LinkedList<Integer>list=linkedList.zipLists(linkedList,linkedList1);
        String result=list.toString();

        String exp=" {1} ->{4} ->{2} ->{5} ->{3} ->{6} ->{7} ->NULL";
        assertEquals(exp,result);
    }

    @Test
    @DisplayName("both linked list size =1")
    void sizeOneTest(){
        LinkedList<Integer> linkedList=new LinkedList<>();
        linkedList.insert(1);

        LinkedList<Integer> linkedList1=new LinkedList<>();
        linkedList1.insert(4);

        LinkedList<Integer>list=linkedList.zipLists(linkedList,linkedList1);
        String result=list.toString();

        String exp=" {1} ->{4} ->NULL";
        assertEquals(exp,result);
    }

    @Test
    @DisplayName("one linked list size =1")
    void linkedListSizeOneTest(){
        LinkedList<Integer> linkedList=new LinkedList<>();
        linkedList.insert(1);

        LinkedList<Integer> linkedList1=new LinkedList<>();
        linkedList1.insert(4);
        linkedList1.insert(5);

        LinkedList<Integer>list=linkedList.zipLists(linkedList,linkedList1);
        String result=list.toString();

        String exp=" {1} ->{5} ->{4} ->NULL";
        assertEquals(exp,result);
    }
}
