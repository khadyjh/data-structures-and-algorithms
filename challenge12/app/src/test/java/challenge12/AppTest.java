/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package challenge12;

import challenge12.AnimalShelter.Cat;
import challenge12.AnimalShelter.Dog;
import org.junit.Test;
import org.junit.jupiter.api.DisplayName;

import static org.junit.Assert.*;

public class AppTest {
    @Test public void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull("app should have a greeting", classUnderTest.getGreeting());
    }

    @Test
    @DisplayName("Can successfully enqueue dog object")
    public void test(){
        AnimalQueue animalQueue=new AnimalQueue();
        Dog dog=new Dog("spike","black",5);
        animalQueue.enqueue(dog);
        String exp="AnimalQueue{dogQueue= front  {AnimalShelter{name='spike', color='black', age=5}} rear , catQueue= front   rear }";
        String result=animalQueue.toString();
        assertEquals(exp,result);

    }

    @Test
    @DisplayName("Can successfully enqueue multi dog object and cat object")
    public void test1(){
        AnimalQueue animalQueue=new AnimalQueue();
        Dog dog=new Dog("spike","black",5);
        Cat cat=new Cat("tom","gray",5);
        animalQueue.enqueue(dog);
        animalQueue.enqueue(cat);

        String exp="AnimalQueue{dogQueue= front  {AnimalShelter{name='spike', color='black', age=5}} rear , catQueue= front  {AnimalShelter{name='tom', color='gray', age=5}} rear }";
        String result=animalQueue.toString();
        assertEquals(exp,result);

    }
    @Test
    @DisplayName("Can successfully dequeue")
    public void test2(){
        AnimalQueue animalQueue=new AnimalQueue();
        Dog dog=new Dog("spike","black",5);
        Cat cat=new Cat("tom","gray",5);
        animalQueue.enqueue(dog);
        animalQueue.enqueue(cat);

        String exp="AnimalShelter{name='tom', color='gray', age=5}";
        String result= animalQueue.dequeue("cat").toString();
        assertEquals(exp,result);

    }

    @Test
    @DisplayName("return null if dequeue some thing different than dog or cat ")
    public void test3(){
        AnimalQueue animalQueue=new AnimalQueue();
        Dog dog=new Dog("spike","black",5);
        Cat cat=new Cat("tom","gray",5);
        animalQueue.enqueue(dog);
        animalQueue.enqueue(cat);

        assertNull(animalQueue.dequeue("hours"));
    }

}
